alias update="yaourt -Suya"
alias pingg="ping -c 1 8.8.8.8;echo DNS:;ping -c 2 google.com"
alias i3lock="i3lock -t -i /home/lumolk/Kuvat/Waves.png"
alias sudo="sudo "
alias vim="vim '+set encoding=utf-8'"
alias svim="sudo vim '+set encoding=utf-8'"   
alias nukkumaan="systemctl poweroff"
alias ls='ls --color=auto'
alias g="grep --color=auto"
alias mntntfs='sudo mount -t ntfs-3g /dev/sda3 /mnt/Acer/'

export EDITOR="vim"
export _JAVA_AWT_WM_NONREPARENTING=1 
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

bindkey -v
SAVEHIST=100
HISTFILE=~/.config/.zsh_history 
bindkey '^R' history-incremental-search-backward
 

setopt autocd
eval $(dircolors -b)

#ZSH
autoload -U compinit promptinit
compinit
promptinit
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' \
        'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

setopt INC_APPEND_HISTORY
setopt share_history
setopt correct
source .gitconf/master/System/zsh-history-substring-search.zsh

#zmodload zsh/terminfo
#bindkey "$terminfo[kcuu1]" history-substring-search-up
#bindkey "$terminfo[kcud1]" history-substring-search-down    

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

autoload -U colors && colors
PROMPT="%{$fg_bold[green]%}%(2~.%1~ .)%F{red}Â»%F{white} %{$reset_color%}"
RPROMPT='%(?,%F{green}:%),%F{red}%? %F{red}:()%f'



# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}

key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
#key[Up]=${terminfo[kcuu1]}
#key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi
